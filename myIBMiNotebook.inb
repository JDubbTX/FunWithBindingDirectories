[{"kind":1,"language":"markdown","value":"This IBM i notebook is a demonstration of how binding directories work.\r\n\r\nA binding directory is a non-source (non compiled) object that lists modules or service programs needed by an ILE Program.  While binding directories are not required, they do offer some convenience.  Specifying a binding directory in the source means that all modules / service programs needed by the program do not need to be listed in the programs creation command.\r\n\r\nBefore starting, set your working directory to 'FunWithBindingDirectories'.\r\n\r\nLets start by compiling the module 'myModule.sqlrpgle'."},{"kind":2,"language":"cl","value":"CRTSQLRPGI OBJ(myModule) SRCSTMF('myModule.sqlrpgle') OBJTYPE(*MODULE) CVTCCSID(*JOB) TEXT('FunWithBindingDirectories - Demonstration Module')"},{"kind":1,"language":"markdown","value":"myModule has one exported procedure in it, 'Capitalize'.  It has a prototype that defines one input parameter, as well as a return value.  The exported procedure is listed in the binder language for the service program, 'myServiceProgram.bnd'.  \n\nThe binder language also specifies the signature for service program. In order to create a service program, we must run a CRTSRVPGM command.  In the below command, we specify a module because the module the module name doesn't match the name of the service program we are trying to create.  If the module name matched, we could omit the MODULE parameter from the CRTSRVPGM command."},{"kind":2,"language":"cl","value":"CRTSRVPGM SRVPGM(MYSRVPGM) MODULE(MYMODULE) SRCSTMF('myServiceProgram.bnd') TEXT('FunWithBindingDirectories - Demo Service Pgm')"},{"kind":1,"language":"markdown","value":"Assuming the CRTSRVPGM command was successful, a service program object was created in the current library.\n\nYou can query information about the service program with SQL"},{"kind":2,"language":"sql","value":"SELECT PROGRAM_NAME AS \"Name\",\r\n       PROGRAM_LIBRARY AS \"Library\",\r\n       OBJECT_TYPE AS \"Obj typ\",\r\n       PROGRAM_TYPE AS \"Type\",\r\n       ACTIVATION_GROUP AS \"ActGrp\",\r\n       SIGNATURES,\r\n       EXPORT_SIGNATURES AS \"Export signatures\"\r\nFROM QSYS2.PROGRAM_INFO\r\nWHERE PROGRAM_NAME = 'MYSRVPGM'\r\n  AND OBJECT_TYPE = '*SRVPGM'"},{"kind":1,"language":"markdown","value":"Now its time to compile the calling program 'myProgram.rpgle'.  It uses the capitalize exported procedure from MYSRVPGM. We do this with 2 CL commands, CRTRPGMOD, then CRTPGM."},{"kind":2,"language":"cl","value":"CRTRPGMOD MODULE(MYPROGRAM) SRCSTMF(myProgram.rpgle) TGTCCSID(*JOB) TEXT('FunWithBindingDirectories - Example Program Mod')"},{"kind":1,"language":"markdown","value":"In the CRTPGM command, since the name of the module matches the name of the program, we don't need to specify it.  We do, however, have to specify the service program that is needed by the program.  "},{"kind":2,"language":"cl","value":"CRTPGM PGM(MYPROGRAM) BNDSRVPGM(MYSRVPGM) TEXT('FunWithBindingDirectories - Example Program')"},{"kind":1,"language":"markdown","value":"We can make things easier on oursleves with the use of a binding directory.  Adding a binding directory allows us 2 conveniences\n  1) CRTBNDRPG can be used to create the program in 1 step, instead of having to issue a seperate CRTRPGMOD and CRTPGM command\n  2) The name of the bound service program will no longer need to be specified.  In fact, since we are using CRTBNDRPG, there isn't a way to specify the service program, as there isn't a BNDSRVPGM parameter in the CRTBNDRPG command.\n\nWe start by running a few CL commands to create the binding directory:"},{"kind":2,"language":"cl","value":"CRTBNDDIR BNDDIR(MYBNDDIR) TEXT('FunWithBindingDirectories - Example Binding Dir')"},{"kind":1,"language":"markdown","value":"and then..."},{"kind":2,"language":"cl","value":"ADDBNDDIRE BNDDIR(MYBNDDIR) OBJ(MYSRVPGM)"},{"kind":1,"language":"markdown","value":"If succesful, the binding directory MYBNDDIR will have been created in the current library, and a single entry for the service program 'MYSRVPGM' was added to it.  \n\nYou can query information about the binding directory with SQL:"},{"kind":2,"language":"sql","value":"SELECT * FROM QSYS2.BINDING_DIRECTORY_INFO\r\nWHERE BINDING_DIRECTORY = 'MYBNDDIR'"},{"kind":1,"language":"markdown","value":"We are almost ready to run CRTBNDRPG.  First we need to specify the name of the binding directory in the source for myProgram.rpgle.  Do this by un-commenting line 3.  When you are done, lines 1 - 3 should look like this:\r\n\r\n**Free\r\nctl-opt option(*srcstmt:*nodebugio);\r\nctl-opt bnddir('MYBNDDIR');\r\n\r\nSave the source, then run the following command to create the program in one step:"},{"kind":2,"language":"cl","value":"CRTBNDRPG PGM(MYPROGRAM) SRCSTMF(myProgram.rpgle) TEXT('FunWithBindingDirectories - Example Program')"},{"kind":1,"language":"markdown","value":"And thats it!  Adding a binding directory that lists service programs or modules needed by a program allows you to create the program in one step, without having to list them in the create command."}]